from ios_device.servers.DTXSever import DTXFragment,get_auxiliary_text,selector_to_pyobject

if __name__ == '__main__':
    buf = b'y[=\x1f \x00\x00\x00\x00\x00\x01\x00\xc7\x05\x00\x00p\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00#\x05\x00\x00\xb7\x05\x00\x00\x00\x00\x00\x00\xf0\x05\x00\x00\x00\x00\x00\x00\x13\x05\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x00\x07\x05\x00\x00bplist00\xd4\x01\x02\x03\x04\x05yz{X$objectsX$versionY$archiverT$top\xaf\x10@\x06\x07\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f*\x1b+,-./0123456789:;<=>?@ABCDEFGHIJKQRSghijklmnopqrstuvU$null\xd3\x08\t\n\x0b\x0c\x12V$classWNS.keysZNS.objects\x80?\xa5\r\x0e\x0f\x10\x11\x80\x02\x80\x03\x80\x04\x80\x05\x80\x07\xa5\x13\x14\x15\x16\x17\x80\x08\x80\t\x80-\x80.\x80>RurYprocAttrsRbmXcpuUsageXsysAttrs^sampleInterval\x11\x03\xe8\xd2\x08\n !\x80,\xa8"#$%&\'()\x80\n\x80\x0b\x80\x11\x80\x13\x80\x16\x80\x19\x80$\x80*^memVirtualSizeZprocStatusXappSleepSuidYvmPageInsXmemRShrdYctxSwitch]memCompressedZintWakeups^cpuTotalSystem^responsiblePID]physFootprint\\cpuTotalUser\\sysCallsUnix_\x10\x0fmemResidentSize\\sysCallsMach\\memPurgeable]diskBytesRead]machPortCount\\__suddenTermV__archXmemRPrvtWmsgSentTppid[threadCountWmemAnon_\x10\x10diskBytesWrittenTpgidVfaultsWmsgRecv\\__restrictedSpidY__sandbox\xd2LMNOZ$classnameX$classesWNSArray\xa2NPXNSObject\x10\x00\t\xd2\x08\nTU\x80,\xaf\x10\x11VWXYZ[\\]^_`abcdef\x800\x80\x1c\x80%\x80#\x801\x802\x803\x804\x805\x806\x807\x808\x809\x80:\x80;\x80<\x80=\\diskWriteOps_\x10\x15vmCompressorPageCount^vmExtPageCount[vmFreeCount^vmIntPageCount_\x10\x10vmPurgeableCount\\netPacketsIn[vmWireCountZnetBytesIn]netPacketsOut[diskReadOps[vmUsedCount]__vmSwapUsage[netBytesOut\x12;\x9a\xca\x00\xd2LMwx\\NSDictionary\xa2wP\x12\x00\x01\x86\xa0_\x10\x0fNSKeyedArchiver\xd1|}Troot\x80\x01\x00\x08\x00\x11\x00\x1a\x00#\x00-\x002\x00u\x00{\x00\x82\x00\x89\x00\x91\x00\x9c\x00\x9e\x00\xa4\x00\xa6\x00\xa8\x00\xaa\x00\xac\x00\xae\x00\xb4\x00\xb6\x00\xb8\x00\xba\x00\xbc\x00\xbe\x00\xc1\x00\xcb\x00\xce\x00\xd7\x00\xe0\x00\xef\x00\xf2\x00\xf7\x00\xf9\x01\x02\x01\x04\x01\x06\x01\x08\x01\n\x01\x0c\x01\x0e\x01\x10\x01\x12\x01!\x01,\x015\x019\x01C\x01L\x01V\x01d\x01o\x01~\x01\x8d\x01\x9b\x01\xa8\x01\xb5\x01\xc7\x01\xd4\x01\xe1\x01\xef\x01\xfd\x02\n\x02\x11\x02\x1a\x02"\x02\'\x023\x02;\x02N\x02S\x02Z\x02b\x02o\x02s\x02}\x02\x82\x02\x8d\x02\x96\x02\x9e\x02\xa1\x02\xaa\x02\xac\x02\xad\x02\xb2\x02\xb4\x02\xc8\x02\xca\x02\xcc\x02\xce\x02\xd0\x02\xd2\x02\xd4\x02\xd6\x02\xd8\x02\xda\x02\xdc\x02\xde\x02\xe0\x02\xe2\x02\xe4\x02\xe6\x02\xe8\x02\xea\x02\xf7\x03\x0f\x03\x1e\x03*\x039\x03L\x03Y\x03e\x03p\x03~\x03\x8a\x03\x96\x03\xa4\x03\xb0\x03\xb5\x03\xba\x03\xc7\x03\xca\x03\xcf\x03\xe1\x03\xe4\x03\xe9\x00\x00\x00\x00\x00\x00\x02\x01\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xebbplist00\xd4\x01\x02\x03\x04\x05\x06\x07\nX$versionY$archiverT$topX$objects\x12\x00\x01\x86\xa0_\x10\x0fNSKeyedArchiver\xd1\x08\tTroot\x80\x01\xa2\x0b\x0cU$nullZsetConfig:\x08\x11\x1a$)27ILQSV\\\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g'
    fragment = DTXFragment(buf).message

    print(f'接收 DTX Data: {selector_to_pyobject(fragment._selector)} :{get_auxiliary_text(fragment)}')